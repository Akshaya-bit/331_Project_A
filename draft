package ecte331;


import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class image {
    public static short[][] readGrayscaleImage(String fileName) {
        short[][] grayImage = null;
        try {
            BufferedImage image = ImageIO.read(new File(fileName));
            int width = image.getWidth();
            int height = image.getHeight();

            byte[] pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
            grayImage = new short[height][width];

            for (int i = 0; i < height; i++) {
                for (int j = 0; j < width; j++) {
                    int coord = 3 * (i * width + j);
                    int pr = ((short) pixels[coord] & 0xff); // red
                    int pg = (((short) pixels[coord + 1] & 0xff)); // green
                    int pb = (((short) pixels[coord + 2] & 0xff)); // blue
                    grayImage[i][j] = (short) Math.round(0.299 * pr + 0.587 * pg + 0.114 * pb);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return grayImage;
    }

    public static void main(String[] args) throws IOException {
        String templateFileName = "Template.jpg";
        String sourceFileName = "TenCardG.jpg";

        short[][] templateImage = readGrayscaleImage(templateFileName);
        short[][] sourceImage = readGrayscaleImage(sourceFileName);

        // You can print dimensions to verify
        System.out.println("Template Image: " + templateImage.length + "x" + templateImage[0].length);
        System.out.println("Source Image: " + sourceImage.length + "x" + sourceImage[0].length);

        // Call the template matching function here with the grayscale images
        templateMatching(templateImage, sourceImage);
    }

    
    public static void templateMatching(short[][] templateImage, short[][] sourceImage) {
        
    }
}
