package ecte331;


import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class image {
	public static short [][] grayImage;
	public static int width;
	public static int height;
	private static BufferedImage image;

	static byte[] pixels;

	public static void main(String[] args) throws IOException {

		String fileNameinp="Template.jpg";

		File inp=new File(fileNameinp);

		BufferedImage template_image = ImageIO.read(inp);

		int width = template_image.getWidth();
		int  height = template_image.getHeight();          
		short[][] source_img=readColourImage(fileNameinp);

		pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
		//System.out.println("Dimension of the image: WxH= " + width + " x "+height+" "+ "| num of pixels: "+ pixels.length);


		String fileNameinp1="TenCardG.jpg";
		File inp1=new File(fileNameinp1);

		BufferedImage image_source = ImageIO.read(inp1);

		int width_source = image_source.getWidth();
		int height_source = image_source.getHeight();          

		short[][] source_img1=readColourImage(fileNameinp1);

		pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
		//System.out.println("Dimension of the image: WxH= " + width + " x "+height+" "+ "| num of pixels: "+ pixels.length);

	}


	public static short[][] readColourImage(String fileName) {

		try
		{
			// RGB pixel values
			byte[] pixels;

			File inp=new File(fileName);
			image = ImageIO.read(inp);
			width = image.getWidth();
			height = image.getHeight();          


			pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
			System.out.println("Dimension of the image: WxH= " + width + " x "+height+" "+ "| num of pixels: "+ pixels.length);



			//rgb2gray in a 2D array grayImage                 
			int pr;// red
			int pg;//  green
			int pb;// blue     

			grayImage =new short [height][width];
			int coord;
			for (int i=0; i<height;i++)
				for(int j=0;j<width;j++)
				{        		     
					coord= 3*(i*width+j);
					pr= ((short) pixels[coord] & 0xff); // red
					pg= (((short) pixels[coord+1] & 0xff));//  green
					pb= (((short) pixels[coord+2] & 0xff));// blue                

					grayImage[i][j]=(short)Math.round(0.299 *pr + 0.587 * pg  + 0.114 * pb);         

				}  
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		return grayImage; 

	}}
